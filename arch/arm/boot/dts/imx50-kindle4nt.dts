/*
 * Copyright 2017 Alexander Kurz <akurz@blala.de>
 *
 * The code contained herein is licensed under the GNU General Public
 * License. You may obtain a copy of the GNU General Public License
 * Version 2 or later at the following locations:
 *
 * http://www.opensource.org/licenses/gpl-license.html
 * http://www.gnu.org/copyleft/gpl.html
 */

/dts-v1/;

#include "imx50.dtsi"
#include <dt-bindings/interrupt-controller/irq.h>
#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/input/input.h>

/ {
	model = "Kindle 4th Generation (Tequila)";
	compatible = "fsl,imx50";

	chosen {
		stdout-path = &uart1;
	};

	memory@70000000 {
		device_type = "memory";
		reg = <0x70000000 0x10000000>;
	};

	sidebuttons: keyboard {
		compatible = "gpio-matrix-keypad";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_sidebuttons>;

		col-scan-delay-us = <10>;
		debounce-delay-ms = <10>;

		linux,no-autorepeat;

		col-gpios = <&gpio5 12 GPIO_ACTIVE_LOW>;

		row-gpios = <
			&gpio4 1 GPIO_ACTIVE_LOW
			&gpio4 3 GPIO_ACTIVE_LOW
			&gpio4 5 GPIO_ACTIVE_LOW
			&gpio4 7 GPIO_ACTIVE_LOW
			&gpio4 0 GPIO_ACTIVE_LOW
			&gpio4 2 GPIO_ACTIVE_LOW
			&gpio4 4 GPIO_ACTIVE_LOW
			&gpio4 6 GPIO_ACTIVE_LOW
		>;
 
		linux,keymap = <
			MATRIX_KEY(0, 0, KEY_LEFTCTRL)
			MATRIX_KEY(1, 0, KEY_MENU)
			MATRIX_KEY(2, 0, KEY_PAGEDOWN)
			MATRIX_KEY(3, 0, KEY_F21)
			MATRIX_KEY(4, 0, KEY_F23)
			MATRIX_KEY(5, 0, KEY_PAGEUP)
			MATRIX_KEY(6, 0, KEY_HOME)
			MATRIX_KEY(7, 0, KEY_BACK) 
		>;
	};

	fiveway_directional: gpio-keys0 {
		compatible = "gpio-keys";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_fiveway_directional>;
		autorepeat;

		up {
			label = "Fiveway UP Button";
			gpios = <&gpio1 20 GPIO_ACTIVE_HIGH>;
			linux,code = <KEY_UP>;
		};

		down {
			label = "Fiveway DOWN Button";
			gpios = <&gpio1 19 GPIO_ACTIVE_HIGH>;
			linux,code = <KEY_DOWN>;
		};

		left {
			label = "Fiveway LEFT Button";
			gpios = <&gpio1 16 GPIO_ACTIVE_HIGH>;
			linux,code = <KEY_LEFT>;
		};

		right {
			label = "Fiveway RIGHT Button";
			gpios = <&gpio1 17 GPIO_ACTIVE_HIGH>;
			linux,code = <KEY_RIGHT>;
		};
	};

	fiveway_select: gpio-keys1 {
		compatible = "gpio-keys";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_fiveway_select>;

		select {
			label = "Fiveway SELECT Button";
			gpios = <&gpio1 18 GPIO_ACTIVE_HIGH>;
			linux,code = <KEY_ENTER>;
		};
	};
};

&iomuxc {
	imx50-kindle { 
		/*
			Values correlated from Linux 2.6.31 source 
			in mx50_yoshi.c.
		*/

		pinctrl_sidebuttons: gpiokeysgrp0 {
			fsl,pins = < 
				MX50_PAD_KEY_COL0__GPIO4_0 	0xc4 // Keyboard
				MX50_PAD_KEY_COL1__GPIO4_2 	0xc4 // Menu 
				MX50_PAD_KEY_COL2__GPIO4_4 	0xc4 // Right Previous
				MX50_PAD_KEY_COL3__GPIO4_6 	0xc4 // Right Next
				MX50_PAD_KEY_ROW0__GPIO4_1 	0xc4 // Left Previous
				MX50_PAD_KEY_ROW1__GPIO4_3 	0xc4 // Left Next
				MX50_PAD_KEY_ROW2__GPIO4_5 	0xc4 // Home
				MX50_PAD_KEY_ROW3__GPIO4_7 	0xc4 // Back

				MX50_PAD_SD2_D4__GPIO5_12	0x00			
			>;
		}; 

		pinctrl_fiveway_directional: gpiokeysgrp1 {
			fsl,pins = <
				MX50_PAD_EIM_EB1__GPIO1_20  0x00 // Up
				MX50_PAD_EIM_EB0__GPIO1_19  0x00 // Down
				MX50_PAD_EIM_CS2__GPIO1_16  0x00 // Left
				MX50_PAD_EIM_CS1__GPIO1_17  0x00 // Right
			>;
		};

		pinctrl_fiveway_select: gpiokeysgrp2 {
			fsl,pins = <
				MX50_PAD_EIM_CS0__GPIO1_18  0x00 // Select
			>;
		};
 
		pinctrl_uart1: uart1grp {
			fsl,pins = <
				MX50_PAD_UART1_TXD__UART1_TXD_MUX	0xe4
				MX50_PAD_UART1_RXD__UART1_RXD_MUX	0xe4
			>;
		};

		pinctrl_cspi: cspigrp {
			fsl,pins = <
				MX50_PAD_CSPI_SCLK__CSPI_SCLK		0xc4
				MX50_PAD_CSPI_MISO__CSPI_MISO		0xc4
				MX50_PAD_CSPI_MOSI__CSPI_MOSI		0xc4
				MX50_PAD_CSPI_SS0__GPIO4_11			0xe4
			>;
		};

		pinctrl_pmic: pmicgrp {
			fsl,pins = <
				MX50_PAD_UART1_CTS__GPIO6_8		0x84
				MX50_PAD_EPDC_PWRCTRL0__GPIO3_29	0x84
			>;
		};

		pinctrl_esdhc3: esdhc3grp {
			fsl,pins = <
				MX50_PAD_SD3_CMD__ESDHC3_CMD		0xd4
				MX50_PAD_SD3_CLK__ESDHC3_CLK		0x00
				MX50_PAD_SD3_D0__ESDHC3_DAT0		0xd4
				MX50_PAD_SD3_D1__ESDHC3_DAT1		0xd4
				MX50_PAD_SD3_D2__ESDHC3_DAT2		0xd4
				MX50_PAD_SD3_D3__ESDHC3_DAT3		0xd4
				MX50_PAD_SD3_D4__ESDHC3_DAT4		0xd4
				MX50_PAD_SD3_D5__ESDHC3_DAT5		0xd4
				MX50_PAD_SD3_D6__ESDHC3_DAT6		0xd4
				MX50_PAD_SD3_D7__ESDHC3_DAT7		0xd4
			>;
		};
 
		pinctrl_i2c1: i2c1grp {
			fsl,pins = <
				MX50_PAD_I2C1_SCL__I2C1_SCL	0x4000002c
				MX50_PAD_I2C1_SDA__I2C1_SDA	0x4000002c
			>;
		};

		pinctrl_i2c2: i2c2grp {
			fsl,pins = <
				MX50_PAD_I2C2_SCL__I2C2_SCL	0x4000002c
				MX50_PAD_I2C2_SDA__I2C2_SDA	0x4000002c
			>;
		};

		pinctrl_i2c3: i2c3grp {
			fsl,pins = <
				MX50_PAD_I2C3_SCL__I2C3_SCL	0x4000002c
				MX50_PAD_I2C3_SDA__I2C3_SDA	0x4000002c
			>;
		};

		pinctrl_charger_detect: chargerdetectgrp {
			fsl,pins = <
				MX50_PAD_OWIRE__GPIO6_26		0xe4
			>;
		};
	};
};

&uart1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart1>;
	status = "okay";
};

&esdhc3 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_esdhc3>;
	bus-width = <8>;
	non-removable;
	// max-frequency = <52000000>;
	disable-wp;
	status = "okay";
};

&cspi {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_cspi>;
	fsl,spi-num-chipselects = <1>;
	cs-gpios = <&gpio4 11 0>;
	status = "okay";

	pmic: mc13892@0 {
		compatible = "fsl,mc13892";
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_pmic>;
		spi-max-frequency = <1000000>;
		spi-cs-high;
		reg = <0>;
		interrupt-parent = <&gpio6>;
		interrupts = <8 IRQ_TYPE_LEVEL_HIGH>;
		fsl,mc13xxx-uses-rtc;

		regulators {
			sw1_reg: sw1 {
				regulator-min-microvolt = <600000>;
				regulator-max-microvolt = <1375000>;
				regulator-boot-on;
				regulator-always-on;
			};

			sw2_reg: sw2 {
				regulator-min-microvolt = <900000>;
				regulator-max-microvolt = <1850000>;
				regulator-boot-on;
				regulator-always-on;
			};

			sw3_reg: sw3 {
				regulator-min-microvolt = <900000>;
				regulator-max-microvolt = <1850000>;
				regulator-boot-on;
				regulator-always-on;
			};

			sw4_reg: sw4 {
				regulator-min-microvolt = <1100000>;
				regulator-max-microvolt = <1850000>;
				regulator-boot-on;
				regulator-always-on;
			};

			vpll_reg: vpll {
				regulator-min-microvolt = <1050000>;
				regulator-max-microvolt = <1800000>;
				regulator-boot-on;
				regulator-always-on;
			};

			vusb2_reg: vusb2 {
				regulator-min-microvolt = <2400000>;
				regulator-max-microvolt = <2775000>;
				regulator-boot-on;
				regulator-always-on;
			};

			vsd_reg: vsd {
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <3150000>;
			};

			vcam_reg: vcam {
				regulator-min-microvolt = <2500000>;
				regulator-max-microvolt = <3000000>;
			};

			vgen2_reg: vgen2 {
				regulator-min-microvolt = <1200000>;
				regulator-max-microvolt = <3150000>;
				regulator-always-on;
			};

			vgen3_reg: vgen3 {
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <1800000>;
			};
		};

		leds {
			#address-cells = <1>;
			#size-cells = <0>;
			led-control = <0 0xff8 0 0>;
			ledg@2 {
				reg = <2>;
				label = "pmic_ledsg";
				linux,default-trigger = "heartbeat";
			};
		};
	};
};

&i2c2 {
	clock-frequency = <50000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c2>;
	status = "okay";

	max14656@35 {
		compatible = "maxim,max14656";
		reg = <0x35>;
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_charger_detect>;
		interrupt-parent = <&gpio6>;
		interrupts = <26 IRQ_TYPE_LEVEL_HIGH>;
	};

	smart-battery@55 {
		compatible = "ti,bq27210";
		reg = <0x55>;
		ti,i2c-retry-count = <2>;
		ti,poll-retry-count = <10>;
	};
};
